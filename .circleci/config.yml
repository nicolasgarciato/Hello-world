# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/

orbs:
  node: circleci/node@4.7

executors:
  default-executor:
    docker:
      - image: circleci/node:13.8.0

commands:
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run:
  #         name: smoke test
  #         command: |
  #           URL="https://blog.udacity.com/"
  #           # Test if website exists
  #           if curl -s --head ${URL} 
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment 
  configure_infrastructure:
    docker:
      - image: python:3.11-rc-alpine
    steps: 
      - checkout
      - add_ssh_keys:
            # You can get this ID in the section where you registered the SSH Key
            fingerprints: ["85:19:f8:b4:9f:01:e9:76:19:7f:d2:d1:32:ae:3e:00"] 
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible
      - run: ansible --version
      - run: ansible-playbook -i inventory.txt main-remote.yml

  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  initial_setup:
    jobs:
      - configure_infrastructure:
          filters:
                branches:
                  only:
                    - master
                    - test
      - create_infrastructure
      - smoke_test
          requires:
            - create_infrastructure
          # - configure_infrastructure
  node-tests: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
